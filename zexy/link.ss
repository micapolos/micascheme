(library (zexy link)
  (export link)
  (import
    (micascheme)
    (only (zexy ops) label db dw))

  (define (link $ops)
    (let ()
      (define $entries (stack))
      (define $linked (stack))
      (define $pc 0)
      (for-each
        (lambda ($op)
          (syntax-case $op (label db dw)
            ((label $name) (identifier? #'$name)
              (set! $entries (push $entries #`($name #,$pc))))
            ((db $expr)
              (let ()
                (set! $linked (push $linked #'$op))
                (set! $pc (+ $pc 1))))
            ((dw $expr)
              (let ()
                (set! $linked (push $linked #'$op))
                (set! $pc (+ $pc 2))))))
        $ops)
      (values
        (reverse $linked)
        (reverse $entries))))
)
