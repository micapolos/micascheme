(library (micalog micac)
  (export micalog-emu)
  (import
    (only (micascheme) define-syntax syntax-case unsyntax unsyntax-splicing pretty-print quote list quasisyntax push lambda list->syntax display define-rule-syntax string-append apply intercalate with map-using syntaxes ... fluent define-case-syntax literal->syntax syntax export ...)
    (only (micalog micac-transformer) module->micac)
    (only (micalog type) module->typed-syntax)
    (only (micac syntax-c) syntax-c)
    (only (micac expand) expand-instrs)
    (micalog on-old-new)
    (micalog inits-updates)
    (micac lib emu)
    (only (micac) var)
    (micalog keywords))
  (export (import (micalog keywords)))
  (export (import (only (micac lib emu) red green blue)))

  (define-case-syntax (micalog-emu module)
    (module->micac #'module))
)
