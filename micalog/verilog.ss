(library (micalog verilog)
  (export verilog-string display-micalog-verilog)
  (import
    (prefix (micascheme) %)
    (code)
    (verilog code)
    (micalog verilog transformer)
    (micalog verilog flatten)
    (micalog core type)
    (micalog keywords))
  (%export (import (micalog keywords)))

  (%define-case-syntax (verilog-string module %...)
    (%fluent
      (%syntaxes module %...)
      (%map-using module->typed-syntax)
      (%map-using flatten-module)
      (%map-using module->verilog)
      (%map-using module->code)
      (%map-using code-string)
      (%intercalate "\n")
      (%with $it (%apply %string-append $it))
      (%literal->syntax)))

  (%define-rule-syntax (display-micalog-verilog module %...)
    (%display (verilog-string module %...)))
)
