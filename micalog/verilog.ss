(library (micalog verilog)
  (export verilog-string display-micalog-verilog)
  (import
    (prefix (micascheme) %)
    (code)
    (verilog code)
    (micalog verilog transformer)
    (micalog verilog flatten)
    (micalog core type)
    (micalog keywords))
  (%export (import (micalog keywords)))

  (%define-syntax (verilog-string $syntax $lookup)
    (%syntax-case $syntax ()
      ((_ module %...)
        (%fluent
          (%syntaxes module %...)
          (%map (%partial lookup-module->typed-syntax (lookup+core $lookup)) %it)
          (%map flatten-module %it)
          (%map module->verilog %it)
          (%map module->code %it)
          (%map code-string %it)
          (%intercalate "\n")
          (%apply %string-append %it)
          (%literal->syntax)))))

  (%define-rule-syntax (display-micalog-verilog module %...)
    (%display (verilog-string module %...)))
)
