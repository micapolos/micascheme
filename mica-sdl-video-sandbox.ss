(import (micascheme) (sdl) (mica-sdl))

(define $flash? #f)
(define $mouse-x 0)
(define $mouse-y 0)

(define (render $renderer $texture $surface)
  (let ()
    (if $flash?
      (sdl-set-render-draw-color! $renderer 255 255 255 255)
      (sdl-set-render-draw-color! $renderer 0 0 0 255))
    (sdl-render-clear $renderer)
    (sdl-set-render-draw-color! $renderer 255 0 0 255)
    (sdl-render-fill-rect $renderer (make-sdl-rect 0 0 $mouse-x $mouse-y))
    (foreign-set! 'integer-32 (sdl-surface-pixels $surface) (* 4 (random (* 640 480))) #xffffffff)
    (sdl-update-texture $texture #f (sdl-surface-pixels $surface) (sdl-surface-pitch $surface))
    (sdl-render-copy $renderer $texture #f #f)
    (sdl-render-present $renderer)))

(run-sdl (SDL-INIT-VIDEO SDL-INIT-EVENTS)
  (run-sdl-window ($window "Test" SDL-WINDOWPOS-CENTERED SDL-WINDOWPOS-CENTERED 640 480)
    (run-sdl-rgb-surface-with-format ($surface 0 640 480 32 SDL-PIXELFORMAT-BGRA8888)
      (run-sdl-renderer ($renderer $window -1 SDL-RENDERER-ACCELERATED SDL-RENDERER-PRESENT-VSYNC)
        (run-sdl-texture-from-surface ($texture $renderer $surface)
          (run-sdl-event-loop
            (cond
              ((sdl-event-none?)
                (render $renderer $texture $surface))
              ((sdl-event-mouse-motion?)
                (set! $mouse-x (sdl-event-mouse-motion-x))
                (set! $mouse-y (sdl-event-mouse-motion-y)))
              ((sdl-event-key-down? SDLK-SPACE)
                (set! $flash? #t))
              ((sdl-event-key-up? SDLK-SPACE)
                (set! $flash? #f)))))))))
