(import
  (micascheme)
  (labs macro)
  (asm macro-z80))

(define-literals
  ; 8-bit registers
  b c d e h l a
  ixh ixl iyh iyl
  i r

  ; 16-bit registers
  pc sp
  bc de hl af af2
  ix iy

  ; flags
  nz z nc po pe m)

(define-matchers
  ((r $code)
    (b   #b000)
    (c   #b001)
    (d   #b010)
    (e   #b011)
    (h   #b100)
    (l   #b101)
    (a   #b111))
  ((p $p)
    (b   #b000)
    (c   #b001)
    (d   #b010)
    (e   #b011)
    (ixh #b100)
    (ixl #b101)
    (a   #b111))
  ((q $q)
    (b   #b000)
    (c   #b001)
    (d   #b010)
    (e   #b011)
    (iyh #b100)
    (iyl #b101)
    (a   #b111))
  ((c $c)
    (nz  #b000)
    (z   #b001)
    (nc  #b010)
    (c   #b011)
    (po  #b100)
    (pe  #b101)
    (p   #b110)
    (m   #b111))
  ((c2 $c)
    (nz  #b000)
    (z   #b001)
    (nc  #b010)
    (c   #b011))
  ((rr $code)
    (bc   #b00)
    (de   #b01)
    (hl   #b10)
    (sp   #b11))
  ((rr-ix $code)
    (bc   #b00)
    (de   #b01)
    (ix   #b10)
    (sp   #b11))
  ((rr-iy $code)
    (bc   #b00)
    (de   #b01)
    (iy   #b10)
    (sp   #b11))
  ((rr-af $code)
    (bc   #b00)
    (de   #b01)
    (hl   #b10)
    (af   #b11))
  ((proc $c)
    (#x00 #b000)
    (#x08 #b001)
    (#x10 #b010)
    (#x18 #b011)
    (#x20 #b100)
    (#x28 #b101)
    (#x30 #b110)
    (#x38 #b111))
  ((e $e)
    ($e (- $e 2))))

(define-macros
  ; general purpose
  ((daa)                  (db #x27))
  ((cpl)                  (db #x2f))
  ((neg)                  (db #xed) (db #x44))
  ((ccf)                  (db #x3f))
  ((scf)                  (db #x37))
  ((nop)                  (db #x00))
  ((halt)                 (db #x76))
  ((di)                   (db #xf3))
  ((ei)                   (db #xfb))
  ((im 0)                 (db #xed) (db #x46))
  ((im 1)                 (db #xed) (db #x56))
  ((im 2)                 (db #xed) (db #x5e))

  ; 8-bit load
  ((ld a i)               (db #xed) (db #x57))
  ((ld a r)               (db #xed) (db #x5f))
  ((ld i a)               (db #xed) (db #x47))
  ((ld r a)               (db #xed) (db #x4f))
  ((ld a (bc))            (db #x0a))
  ((ld a (de))            (db #x1a))
  ((ld (bc) a)            (db #x02))
  ((ld (de) a)            (db #x12))
  ((ld (r $r1) (r $r2))   (db-233 #b01 $r1 $r2))
  ((ld (p $p1) (p $p2))   (db #xdd) (db-233 #b01 $p1 $p2))
  ((ld (q $q1) (q $q2))   (db #xfd) (db-233 #b01 $q1 $q2))
  ((ld (hl) (r $r))       (db-233 #b01 #b110 $r))
  ((ld (+ ix $d) (r $r))  (db #xdd) (db-233 #b01 #b110 $r) (db $d))
  ((ld (+ iy $d) (r $r))  (db #xfd) (db-233 #b01 #b110 $r) (db $d))
  ((ld (r $r) (hl))       (db-233 #b01 $r #b110))
  ((ld (r $r) (+ ix $d))  (db #xdd) (db-233 #b01 #b110 $r) (db $d))
  ((ld (r $r) (+ iy $d))  (db #xfd) (db-233 #b01 #b110 $r) (db $d))
  ((ld a ($nm))           (db #x3a) (dw $nm))
  ((ld ($nm) a)           (db #x32) (dw $nm))
  ((ld (r $r) $n)         (db-233 #b00 $r #b110) (db $n))
  ((ld (p $p) $n)         (db #xdd) (db-233 #b00 $p #b110))
  ((ld (q $q) $n)         (db #xfd) (db-233 #b00 $p #b110))

  ; 16-bit load
  ((ld sp hl)             (db #xf9))
  ((ld sp ix)             (db #xdd) (db #xf9))
  ((ld sp iy)             (db #xfd) (db #xf9))
  ((ld hl ($nm))          (db #x2a) (dw $nm))
  ((ld (rr $rr) ($nm))    (db #xed) (db224 #b01 $rr #b1011))
  ((ld ix ($nm))          (db #xdd) (db #x2a) (dw $nm))
  ((ld iy ($nm))          (db #xfd) (db #x2a) (dw $nm))
  ((ld ($nm) hl)          (db #x22) (dw $nm))
  ((ld ($nm) (rr $rr))    (db #xed) (db224 #b01 $rr #b0011))
  ((ld ($nm) ix)          (db #xdd) (db #x22) (dw $nm))
  ((ld ($nm) iy)          (db #xfd) (db #x22) (dw $nm))
  ((ld (rr $rr) $nm)      (db-244 #b00 $rr #b0011) (dw $nm))
  ((ld ix $nm)            (db #xdd) (db-244 #b00 $rr #b0011) (dw $nm))
  ((ld iy $nm)            (db #xfd) (db-244 #b00 $rr #b0011) (dw $nm))

  ; 16-bit alu
  ((adc hl (rr $rr))      (db #xed) (db-224 #b01 $rr #b1010))
  ((sbc hl (rr $rr))      (db #xed) (db-224 #b01 $rr #b0010))
  ((add hl (rr $rr))      (db-224 #b00 $rr #b1001))
  ((add ix (rr-ix $rr))   (db #xdd) (db-224 #b00 $rr #b1001))
  ((add iy (rr-iy $rr))   (db #xfd) (db-224 #b00 $rr #b1001))
  ((inc (rr $rr))         (db-244 #b00 $rr #b0011))
  ((inc (rr-ix $rr))      (db #xdd) (db-244 #b00 $rr #b0011))
  ((inc (rr-iy $rr))      (db #xfd) (db-244 #b00 $rr #b0011))
  ((dec (rr $rr))         (db-244 #b00 $rr #b1011))
  ((dec (rr-ix $rr))      (db #xdd) (db-244 #b00 $rr #b1011))
  ((dec (rr-iy $rr))      (db #xfd) (db-244 #b00 $rr #b1011))

  ; stack
  ((pop (rr-af $rr))      (db-224 #b11 $rr #b0001))
  ((pop ix)               (db #xdd) (db #xe1))
  ((pop iy)               (db #xfd) (db #xe1))
  ((push (rr-af $rr))     (db-224 #b11 $rr #b0101))
  ((push ix)              (db #xdd) (db #xe5))
  ((push iy)              (db #xfd) (db #xe5))

  ; exchange
  ((ex af af2)            (db #x08))
  ((ex de hl)             (db #xeb))
  ((ex (sp) hl)           (db #xe3))
  ((ex (sp) ix)           (db #xdd) (db #xe3))
  ((ex (sp) iy)           (db #xfd) (db #xe3))
  ((exx)                  (db #xd9))

  ; call
  ((call $nm)             (db #xcd) (dw $nm))
  ((call (c $c) $nm)      (db-233 #b11 $c #b100) (dw $nm))
  ((ret)                  (db #xc9))
  ((ret (c $c))           (db-233 #b11 $c #b000))
  ((reti)                 (db #xed) (db #x4d))
  ((retn)                 (db #xed) (db #x45))
  ((rst (proc $r))        (db-233 #b11 $r #b111))

  ; jump
  ((jp (hl))              (db #xe9))
  ((jp (ix))              (db #xdd) (db #xe9))
  ((jp (iy))              (db #xfd) (db #xe9))
  ((jp $nm)               (db #xc3) (dw $nm))
  ((jp (c $c) $nm)        (db-233 #b11 $c #b101))
  ((jr (e $e))            (db #x18) (db $e))
  ((jr (c2 $c) (e $e))    (db-323 #b001 $c #b000) (db $e))
  ((djnz (e $e))          (db #x10) (db $e)))

; assemble some Z80 instructions
(ld a i)
(ld a r)
(ld r a)
(ld i a)

(ld a c)
(ld a d)
(ld a ixh)
(ld d 12)
(ld (+ ix 2) c)
(ld a (+ iy 12))
(ld (hl) h)
(ld a (bc))
(ld a (de))
(ld a (#x1234))
(ld (bc) a)
(ld (de) a)
(ld (#x1234) a)

(call #x1213)
(ret)
(rst #x18)
(rst #x38)
(im 0)
(im 1)
(im 2)
(push bc)
(pop ix)

(ex af af2)
(exx)
(ex de hl)
(ex (sp) ix)

(add hl de)
(add ix ix)

(jp nz #x1234)
(djnz -3)
