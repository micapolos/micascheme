(library (val)
  (export)
  (import (scheme))

  (define-syntax (block $syntax)
    (syntax-case $syntax ()
      ((_ op ...)
        (define (parse-entry $syntax)
          (lets
            ($stack (fold-left parse-op (stack) (syntax->list $syntax)))
            (if (single? $stack)
              (car $stack)
              (syntax-error $syntax "not single entry"))))
        (define (parse-op $stack $syntax)
          (syntax-case $syntax (in let the)
            ((in op ...)
              (stack (parse-entry #'(op ...))))
            ((let id expr)
              (push $stack #`(#,id #,expr)))
            ((the expr)
              (push $stack #`(#,(generate-temporary #'tmp) #,$expr))))))))
)
