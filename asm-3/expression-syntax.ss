(library (asm-3 expression-syntax)
  (export define-expr expr)
  (import
    (asm-3 base)
    (asm-3 expression)
    (asm-3 org))

  (define-rule-syntax (define-expr id expr)
    (define-syntax id (make-compile-time-value #'(pure-expression expr))))

  (define-syntax (expr $syntax $lookup)
    (syntax-case $syntax (org)
      ((_ org)
        #'(org-expression))
      ((_ id)
        (identifier? #'id)
        (switch ($lookup #'id)
          ((false? _) #`(identifier-expression #'#,(literal->syntax (datum id))))
          ((else $other) $other)))
      ((_ literal)
        ((or? boolean? integer? string? char?) (datum literal))
        #'(pure-expression literal))
      ((_ (fn arg ...))
        #'(apply application-expression
          (expr fn)
          (list (expr arg) ...)))
      ((_ other)
        (syntax-error #'other "not expression"))))
)
