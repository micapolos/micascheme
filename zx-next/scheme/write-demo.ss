(import
  (zx-next scheme demo)
  (prefix (zx-next write) %))

(demo
  (asm (%writeln "This is from asm..."))
  (put-string "...and this is from Scheme\r")
  (write
    (if (cons 1 2)
      (begin "true")
      (begin "false")))
  (put-char #\return)
  (write (if #f "true" "false"))
  (put-char #\return)
  (write #t)
  (put-char #\return)
  (write #f)
  (put-char #\return)
  (write "foo")
  (put-char #\return)
  (write 'foo)
  (put-char #\return)
  (write #x12)
  (put-char #\return)
  (write #x1234)
  (put-char #\return)
  (write #\a)
  (put-char #\return)
  (write '())
  (put-char #\return)
  (write (cons #\a (cons "foo" 'bar)))
  (put-char #\return)
  (write (cons #\a (cons "foo" (cons 'bar '()))))
  (put-char #\return))
